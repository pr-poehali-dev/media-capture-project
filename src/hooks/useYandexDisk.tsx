import { useState } from 'react';

interface YandexUser {
  email: string;
  name: string;
  token?: string;
}

export const useYandexDisk = () => {
  const [yandexUser, setYandexUser] = useState<YandexUser | null>(null);
  const [showAuthModal, setShowAuthModal] = useState(false);
  const [isUploadingToCloud, setIsUploadingToCloud] = useState(false);

  const loginToYandex = async (email: string, password: string) => {
    try {
      // –í–ê–ñ–ù–û: –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –Ø–Ω–¥–µ–∫—Å.–ö–æ–Ω—Å–æ–ª–∏
      // –∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–π CLIENT_ID. –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-—Ä–µ–∂–∏–º.
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ (–¥–ª—è –¥–µ–º–æ)
      if (!email.trim()) {
        throw new Error('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email –æ—Ç –Ø–Ω–¥–µ–∫—Å –∞–∫–∫–∞—É–Ω—Ç–∞');
      }
      
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // –í –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ email
      const userData = {
        email: email,
        name: email.split('@')[0],
        token: 'demo_token_' + Math.random().toString(36).substring(7)
      };
      
      setYandexUser(userData);
      setShowAuthModal(false);
      
      alert(
        `‚úÖ –î–µ–º–æ-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!\n\n` +
        `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userData.name}\n` +
        `Email: ${userData.email}\n\n` +
        `‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –¥–µ–º–æ-—Ä–µ–∂–∏–º!\n` +
        `–í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –Ω—É–∂–Ω–æ:\n` +
        `1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –Ø–Ω–¥–µ–∫—Å.–ö–æ–Ω—Å–æ–ª–∏\n` +
        `2. –ü–æ–ª—É—á–∏—Ç—å CLIENT_ID –¥–ª—è OAuth\n` +
        `3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–æ–º–µ–Ω –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞`
      );
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
      alert(`–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
  };

  const logoutFromYandex = () => {
    setYandexUser(null);
    alert('–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ø–Ω–¥–µ–∫—Å');
  };

  const uploadToYandexDisk = async (recordedVideo: string | null) => {
    if (!recordedVideo) return;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    if (!yandexUser || !yandexUser.token) {
      setShowAuthModal(true);
      return;
    }
    
    setIsUploadingToCloud(true);
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º blob –≤–∏–¥–µ–æ
      const response = await fetch(recordedVideo);
      const blob = await response.blob();
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
      const extension = blob.type.includes('mp4') ? 'mp4' : 'webm';
      const filename = `imperia_video_${new Date().getTime()}.${extension}`;
      const folderPath = 'IMPERIA_PROMO_Videos';
      
      // –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫ (–¥–µ–º–æ-—Ä–µ–∂–∏–º)
      await new Promise(resolve => setTimeout(resolve, 3000));
      
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∫–æ–¥ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ Yandex Disk API
      const fileSize = (blob.size / 1024 / 1024).toFixed(2); // —Ä–∞–∑–º–µ—Ä –≤ –ú–ë
      
      alert(
        `‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ "–∑–∞–≥—Ä—É–∂–µ–Ω–æ" –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫!\n\n` +
        `üìÅ –ü–∞–ø–∫–∞: "${folderPath}"\n` +
        `üìÑ –§–∞–π–ª: ${filename}\n` +
        `üìä –†–∞–∑–º–µ—Ä: ${fileSize} –ú–ë\n` +
        `üë§ –ê–∫–∫–∞—É–Ω—Ç: ${yandexUser.email}\n\n` +
        `‚ö†Ô∏è –î–ï–ú–û-–†–ï–ñ–ò–ú: –§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω —Ä–µ–∞–ª—å–Ω–æ\n\n` +
        `–î–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –Ω—É–∂–Ω–æ:\n` +
        `1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –Ø–Ω–¥–µ–∫—Å.–ö–æ–Ω—Å–æ–ª–∏\n` +
        `2. –ü–æ–ª—É—á–∏—Ç—å CLIENT_ID –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å OAuth\n` +
        `3. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å Yandex Disk API`
      );
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫:', error);
      alert(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    } finally {
      setIsUploadingToCloud(false);
    }
  };

  return {
    yandexUser,
    showAuthModal,
    isUploadingToCloud,
    setShowAuthModal,
    loginToYandex,
    logoutFromYandex,
    uploadToYandexDisk
  };
};